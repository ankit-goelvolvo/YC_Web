@model YCWeb.Data.Room

@{
    Layout = null;
}
<style type="text/css">
    .form-control {
        height: 40px !important;
    }
</style>
@using (Html.BeginForm(null, null, FormMethod.Get, new { id = "formSaveRoom" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.RoomName, htmlAttributes: new { @class = "control-label col-md-10 required" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RoomName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.RoomTypeID, "Room Type", htmlAttributes: new { @class = "control-label col-md-10 required" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoomTypeID", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.RoomTypeOptionID, "Room Type Option", htmlAttributes: new { @class = "control-label col-md-10 required" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoomTypeOptionID", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxAdults, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxAdults, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxChildren, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxChildren, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-success" onclick="saveRooms();" />
            </div>
        </div>
    </div>
}

<div>
    <button onclick="OpenRooms();" class="BackList">Back to List</button>
</div>
